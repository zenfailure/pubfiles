#!/usr/bin/env bash

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}"  )" >/dev/null 2>&1 && pwd)"

VRUN="~/.tmux/bin/mrun"
VMUX="~/.tmux/bin/vmux"

function usage
{
    echo "$0 [-r] [-n] [-h] -s session-name [ssh-host]"
    echo "  -r remove session"
    echo "  -n do not automatically add user and hostname to the session name"
    echo "  -h print this help"
    exit 1
}

function remove
{
    if [[ -n "$HOST" ]]; then
        SESSION=$(parse_host)
        if tmux has-session -t "$SESSION" &>/dev/null; then
            tmux kill-session -t "$SESSION"
        else
            echo "No local session '$SESSION' could be found."
            exit 1
        fi
        if ssh -t $HOST tmux has-session -t "$SESSION" &>/dev/null; then
            ssh -t $HOST tmux kill-session -t "$SESSION"
            echo "No remote session '$SESSION' could be found."
            exit 1
        fi
    else
        if [[ -z "$NORENAME" ]]; then
            SESSION="$SESSION/$(whoami)/$(hostname)"
        fi
        if tmux has-session -t "$SESSION" &>/dev/null; then
            tmux kill-session -t "$SESSION"
        else
            echo "No local session '$SESSION' could be found."
            exit 1
        fi
    fi
    exit 0
}

function parse_host
{
    if ! grep -i "^Host $HOST\$" ~/.ssh/config &>/dev/null; then
        echo "Provided host '$HOST' cannot be found in ssh config file."
        echo "Please change your ssh config file accordingly."
        exit 1
    else
        USER=$(ssh -G "$HOST" | grep '^user ' | awk '{print $2}')
    fi
    echo "$SESSION/$USER/$HOST"
}

function lvmux
{
    if [[ -z "$NORENAME" ]]; then
        SESSION="$SESSION/$(whoami)/$(hostname)"
    fi

    if tmux has-session -t "$SESSION" &>/dev/null ; then
        if [[ -z "$TMUX" ]]; then
            eval $PRE exec tmux attach-session -t "$SESSION"
        else
            echo "Session '$SESSION' is in detached mode. Unset \$TMUX."
            exit 1
        fi
    else
        tmux new-session -d -s "$SESSION"
        if [[ -z "$TMUX" ]]; then
            eval $PRE exec tmux attach-session -t "$SESSION"
        else
            echo "Session '$SESSION' is in detached mode. Unset \$TMUX."
            exit 1
        fi
    fi
}

function rvmux
{

    SESSION=$(parse_host)
    local remcmd="$VMUX -ns $SESSION"
    local sshcmd="ssh -t $HOST $remcmd"

    if tmux has-session -t "$SESSION" &>/dev/null; then
        if [[ -z "$TMUX" ]]; then
            eval $PRE exec tmux attach-session -t "$SESSION"
        else
            echo "Session '$SESSION' is in detached mode. Unset \$TMUX."
            exit 1
        fi
    else
        tmux new-session -d -s "$SESSION" "$sshcmd"
        tmux run "$VRUN switch_sendkeys_mode"
        if [[ -z "$TMUX" ]]; then
            eval $PRE exec tmux attach-session -t "$SESSION"
        else
            echo "Session '$SESSION' is in detached mode. Unset \$TMUX."
            exit 1
        fi
    fi
}

function main
{
    while getopts ":hnrs:" opt; do
        case $opt in
            h)
                usage
                ;;
            n)
                NORENAME=1
                ;;
            r)
                REMOVE=1
                ;;
            s)
                SESSION="$OPTARG"
                ;;
            \?)
                echo "Invalid option: $OPTARG." 1>&2
                usage
                ;;
            :)
                echo "Invalid option: $OPTARG requires an argument." 1>&2
                usage
                ;;
        esac
    done
    shift $((OPTIND - 1))

    if [[ -z "$SESSION" ]]; then
        echo "Missing mandatory session name." 1>&2
        usage
    fi

    HOST="$1"

    if [[ -n "$REMOVE" ]]; then
        remove
    fi

    if [[ "$TERM" = linux  && $(tty) =~ /dev/pts/.* ]]; then
        PRE='TERM=fbterm'
    fi

    if [[ -z "$HOST" ]]; then
        lvmux
    else
        rvmux
    fi
    exit 0
}

main "$@"
